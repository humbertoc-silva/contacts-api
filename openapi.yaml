openapi: 3.1.0
info:
  title: Contacts API
  summary: API used to manage contacts.
  description: This API is ...
  termsOfService: https://example.com/terms
  contact:
    name: Humberto Corrêa da Silva
    url: https://github.com/humbertoc-silva
    email: humberto@example.com
  license:
    name: MIT
    url: https://github.com/humbertoc-silva/contacts-api/blob/main/LICENSE
  version: 1.0.0
jsonSchemaDialect: https://spec.openapis.org/oas/3.1/dialect/base
servers:
  - url: https://localhost:8443/contacts/v1
    description: Local server.
  - url: https://{environment}.example.com/contacts/v1
    description: Development and staging server.
    variables:
      environment:
        enum:
          - development
          - staging
        default: development
        descriptions: Server's environment.
  - url: https://example.com/contacts/v1
    descriptions: Production server.
paths:
  /contacts:
    summary: ...
    description: ...
    
    get:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/get
      operationId: getContacts
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contacts'
              example: |
                {
                  "data": [
                    {
                      "id": 1,
                      "firstName": "Humberto",
                      "lastName": "Corrêa da Silva",
                      "nickname": "humbertocs",
                      "birthday": "1986-05-30",
                      "gender": "masculine",
                      "company": "Example",
                      "department": "Engineering",
                      "title": "Software Engineer",
                      "website": "https://example.com/profile/humbertocs",
                      "notes": "A brief description about me.",
                      "labels": ["software", "api"],
                      "active": true
                    }
                  ]
                }
    
    post:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/post
      operationId: postContacts
  
  /contacts/{contactId}:
    summary: ...
    description: ...
    
    get:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/get
      operationId: getContact
    
    put:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/put
      operationId: putContact
    
    delete:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/delete
      operationId: deleteContact

    patch:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/patch
      operationId: patchContact
  
    parameters:
      - $ref: '#/components/parameters/contactId'

  /contacts/{contactId}/phones:
    summary: ...
    description: ...
    
    get:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/get
      operationId: getContactPhones
    
    post:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/post
      operationId: postContactPhones
  
    parameters:
      - $ref: '#/components/parameters/contactId'
    
  /contacts/{contactId}/phones/{phoneId}:
    summary: ...
    description: ...
    
    get:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/get
      operationId: getContactPhone
    
    put:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/put
      operationId: putContactPhone
    
    delete:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/delete
      operationId: deleteContactPhone

    patch:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/patch
      operationId: patchContactPhone
  
    parameters:
      - $ref: '#/components/parameters/contactId'
      - $ref: '#/components/parameters/phoneId'

  /contacts/{contactId}/emails:
    summary: ...
    description: ...
    
    get:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/get
      operationId: getContactEmails
    
    post:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/post
      operationId: postContactEmails
  
    parameters:
      - $ref: '#/components/parameters/contactId'

  /contacts/{contactId}/emails/{emailId}:
    summary: ...
    description: ...
    
    get:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/get
      operationId: getContactEmail
    
    put:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/put
      operationId: putContactEmail
    
    delete:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/delete
      operationId: deleteContactEmail
    
    patch:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/patch
      operationId: patchContactEmail
    
    parameters:
      - $ref: '#/components/parameters/contactId'
      - $ref: '#/components/parameters/emailId'

components:
  schemas:
    id:
      type: integer
      format: int64

    uri:
      type: string
      format: uri
    
    paginationLinks:
      type: object
      properties:
        first:
          $ref: '#/components/schemas/uri'
        last:
          $ref: '#/components/schemas/uri'
        prev:
          $ref: '#/components/schemas/uri'
        next:
          $ref: '#/components/schemas/uri'

    contact:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        nickname:
          type: string
        birthday:
          type: string
          format: date
        gender:
          type: string
          enum:
            - masculine
            - feminine
        company:
          type: string
        department:
          type: string
        title:
          type: string
        website:
          type: string
          format: uri
        notes:
          type: string
          maxLength: 250
        labels:
          type: array
          items:
            type: string
        active:
          type: boolean
      required:
        - firstName
        - lastName
        - birthday
        - gender

    contacts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/contact'
        links:
          $ref: '#/components/schemas/paginationLinks'    
      required:
        - data
        - links
  
  parameters:
    pageNumber:
      name: pageNumber
      in: query
      description: ...
      schema:
        type: integer
        format: int32
        default: 0
      example: 0
    
    pageSize:
      name: pageSize
      in: query
      description: ...
      schema:
        type: integer
        format: int32
        enum:
          - 10
          - 50
          - 100
        default: 10
      example: 10
    
    contactId:
      name: contactId
      in: path
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/id'
      example: 1
    
    phoneId:
      name: phoneId
      in: path
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/id'
      example: 1
    
    emailId:
      name: phoneId
      in: path
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/id'
      example: 1