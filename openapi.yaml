openapi: 3.1.0
info:
  title: Contacts API
  summary: API used to manage contacts.
  description: ...
  termsOfService: https://example.com/terms
  contact:
    name: Humberto Corrêa da Silva
    url: https://github.com/humbertoc-silva
    email: humbertoc-silva@example.com
  license:
    name: MIT
    url: https://github.com/humbertoc-silva/contacts-api/blob/main/LICENSE
  version: 1.0.0
servers:
  - url: https://localhost:8443/contacts/v1
    description: Local server.
  - url: https://{environment}.example.com/contacts/v1
    description: Development and staging server.
    variables:
      environment:
        enum:
          - development
          - staging
        default: development
        descriptions: Server's environment.
  - url: https://example.com/contacts/v1
    descriptions: Production server.
paths:
  /contacts:
    summary: ...
    description: ...
    get:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/get
      operationId: getContacts
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contactsGetResponseContent'
              example: |
                {
                  "data": [
                    {
                      "id": 1,
                      "firstName": "Humberto",
                      "lastName": "Corrêa da Silva",
                      "nickname": "humbertoc-silva",
                      "birthday": "1986-05-30",
                      "gender": "masculine",
                      "company": "Example",
                      "department": "Engineering",
                      "title": "Software Engineer",
                      "website": "https://example.com/profile/humbertoc-silva",
                      "notes": "A brief description about me.",
                      "labels": ["software", "api"],
                      "active": true
                    }
                  ],
                  "links": {
                    "self": "https://example.com/contacts/v1/contacts?pageNumber=0&pageSize=10",
                    "first": "https://example.com/contacts/v1/contacts?pageNumber=0&pageSize=10",
                    "prev": "https://example.com/contacts/v1/contacts?pageNumber=0&pageSize=10",
                    "next": "https://example.com/contacts/v1/contacts?pageNumber=1&pageSize=10",
                    "last": "https://example.com/contacts/v1/contacts?pageNumber=9&pageSize=10"
                  }
                }
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/post
      operationId: postContacts
      requestBody:
        description: ...
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contactsPostRequestBody'
            example: |
              {
                "data": {
                  "firstName": "Humberto",
                  "lastName": "Corrêa da Silva",
                  "nickname": "humbertoc-silva",
                  "birthday": "1986-05-30",
                  "gender": "masculine",
                  "company": "Example",
                  "department": "Engineering",
                  "title": "Software Engineer",
                  "website": "https://example.com/profile/humbertoc-silva",
                  "notes": "A brief description about me.",
                  "labels": ["software", "api"],
                  "active": true
                }
              }
        required: true
      responses:
        '201':
          description: Created
          headers:
            location:
              $ref: '#/components/headers/location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contactsPostResponseContent'
              example: |
                {
                  "data": {
                    "id": 1,
                    "firstName": "Humberto",
                    "lastName": "Corrêa da Silva",
                    "nickname": "humbertoc-silva",
                    "birthday": "1986-05-30",
                    "gender": "masculine",
                    "company": "Example",
                    "department": "Engineering",
                    "title": "Software Engineer",
                    "website": "https://example.com/profile/humbertoc-silva",
                    "notes": "A brief description about me.",
                    "labels": ["software", "api"],
                    "active": true
                  },
                  "links": {
                    "self": "https://example.com/contacts/v1/contacts/1"
                  }
                }
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  /contacts/{contactId}:
    summary: ...
    description: ...
    get:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/get
      operationId: getContact
    put:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/put
      operationId: putContact
    delete:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/delete
      operationId: deleteContact
    patch:
      tags:
        - contacts
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/patch
      operationId: patchContact
    parameters:
      - $ref: '#/components/parameters/contactId'
  /contacts/{contactId}/phones:
    summary: ...
    description: ...
    get:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/get
      operationId: getContactPhones
    post:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/post
      operationId: postContactPhones
    parameters:
      - $ref: '#/components/parameters/contactId'
  /contacts/{contactId}/phones/{phoneId}:
    summary: ...
    description: ...
    get:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/get
      operationId: getContactPhone
    put:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/put
      operationId: putContactPhone
    delete:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/delete
      operationId: deleteContactPhone
    patch:
      tags:
        - contact-phones
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/phones/{phoneId}/patch
      operationId: patchContactPhone
    parameters:
      - $ref: '#/components/parameters/contactId'
      - $ref: '#/components/parameters/phoneId'
  /contacts/{contactId}/emails:
    summary: ...
    description: ...
    get:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/get
      operationId: getContactEmails
    post:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/post
      operationId: postContactEmails
    parameters:
      - $ref: '#/components/parameters/contactId'
  /contacts/{contactId}/emails/{emailId}:
    summary: ...
    description: ...
    get:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/get
      operationId: getContactEmail
    put:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/put
      operationId: putContactEmail
    delete:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/delete
      operationId: deleteContactEmail
    patch:
      tags:
        - contact-email
      summary: ...
      description: ...
      externalDocs:
        description: ...
        url: https://example.com/docs/contacts/v1/contacts/{contactId}/emails/{emailId}/patch
      operationId: patchContactEmail
    parameters:
      - $ref: '#/components/parameters/contactId'
      - $ref: '#/components/parameters/emailId'
components:
  schemas:
    id:
      title: ...
      description: ...
      type: integer
      format: int64
    readOnlyId:
      title: ...
      description: ...
      type: integer
      format: int64
      readOnly: true
    uri:
      title: ...
      description: ...
      type: string
      format: uri
    links:
      title: ...
      description: ...
      type: object
      properties:
        self:
          $ref: '#/components/schemas/uri'
        first:
          $ref: '#/components/schemas/uri'
        prev:
          $ref: '#/components/schemas/uri'
        next:
          $ref: '#/components/schemas/uri'
        last:
          $ref: '#/components/schemas/uri' 
    pageNumber:
      title: ...
      description: ...
      type: integer
      format: int32
    pageSize:
      title: ...
      description: ...
      type: integer
      format: int32
      enum:
        - 10
        - 50
        - 100
    contact:
      title: ...
      description: ...
      type: object
      properties:
        id:
          $ref: '#/components/schemas/readOnlyId'
        firstName:
          type: string
        lastName:
          type: string
        nickname:
          type: string
        birthday:
          type: string
          format: date
        gender:
          type: string
          enum:
            - masculine
            - feminine
        company:
          type: string
        department:
          type: string
        title:
          type: string
        website:
          type: string
          format: uri
        notes:
          type: string
          maxLength: 250
        labels:
          type: array
          items:
            type: string
          minItems: 1
          uniqueItems: true
        active:
          type: boolean
      required:
        - firstName
        - lastName
        - birthday
        - gender
    contactsGetResponseContent:
      title: ...
      description: ...
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/contact'
        links:
          $ref: '#/components/schemas/links'
      required:
        - data
        - links
    contactsPostRequestBody:
      title: ...
      description: ...
      type: object
      properties:
        data:
          $ref: '#/components/schemas/contact'
      required:
        - data
    contactsPostResponseContent:
      title: ...
      description: ...
      type: object
      properties:
        data:
          $ref: '#/components/schemas/contact'
        links:
          $ref: '#/components/schemas/links'
      required:
        - data
        - links
  responses:
    '202':
      description: Accepted
    '204':
      description: No Content
    '400':
      description: Bad Request
    '401':
      description: Unauthorized
    '403':
      description: Forbidden
    '404':
      description: Not Found
    '405':
      description: Method Not Allowed
    '406':
      description: Not Acceptable
    '409':
      description: Conflict
    '415':
      description: Unsupported Media Type
    '422':
      description: Unprocessable Entity
    '500':
      description: Internal Server Error
    '503':
      description: Service Unavailable
  parameters:
    pageNumber:
      name: pageNumber
      in: query
      description: ...
      schema:
        $ref: '#/components/schemas/pageNumber'
      example: 0
    pageSize:
      name: pageSize
      in: query
      description: ...
      schema:
        $ref: '#/components/schemas/pageSize'
      example: 10
    contactId:
      name: contactId
      in: path
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/id'
      example: 1
    phoneId:
      name: phoneId
      in: path
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/id'
      example: 1
    emailId:
      name: phoneId
      in: path
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/id'
      example: 1
  headers:
    location:
      description: ...
      required: true
      schema:
        $ref: '#/components/schemas/uri'